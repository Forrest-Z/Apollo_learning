1. Rancher 
	Image: docker.51vr.local:6000/apolloauto/apollo:dev5 

2. IN Ubuntu terminal: docker ps -a
		  	docker exec -it 1c10ae5c4777  bash 


3. The GitLab

	http://git.51vr.local/51World/apollo/tree/a3.5/docker     

4. apollo/docker/set_host
	You need to run the setup_host.sh at least once for a new HOST environment.


5. apollo/docker/scripts
    bash dev_start.sh
    bash dev_into.sh

Start the dreamview:
    bash scripts/bootstrap.sh 

6. only CyberBridge bazel build:
  root@apollo5-apollo-ubuntu14-1:/apollo# bazel build //CyberBridge:libApolloCyber.so


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Apollo官方:

1. 
   GPU version:
   sudo ./apollo.sh build_gpu  

   CPU version:
    ./apollo.sh build_cpu

   Easy version:
   bash apollo.sh build -j 8


apollo 3.5 official image:
 https://github.com/ApolloAuto/apollo/tree/r3.5.0
Apollo 3.5的构建方法:
https://blog.csdn.net/davidhopper/article/details/85097502

# Start the docker.
bash docker/scripts/dev_start.sh
# Step into the docker.
bash docker/scripts/dev_into.sh
# Build the apollo project in the docker.
# -j 8 depends on the number of CPU cores on your machine.
bash apollo.sh build -j 8

+bash scripts/bootstrap.sh   
http://localhost:8888/




2. 51VR

without perception
  apollo5-apollo-ubuntu14-1

 docker exec -it  1c10ae5c4777 bash 


root@apollo5-apollo-ubuntu14-1:/apollo# ./apollo.sh




3. 错误

./apollo.sh build_cpu


INFO: (07-23 01:17:44.831) Found 3742 targets...
ERROR: (07-23 01:17:46.748) /apollo/modules/perception/lidar/lib/segmentation/cnnseg/BUILD:84:1: Linking of rule '//modules/perception/lidar/lib/segmentation/cnnseg:cnn_segmentation_test' failed (Exit 1).
/usr/bin/ld: warning: libmkldnn.so.0, needed by bazel-out/local-dbg/bin/_solib_k8/_U@paddlepaddle_S_S_Cpaddlepaddle___Uexternal_Spaddlepaddle_Slib/libpaddle_fluid.so, not found (try using -rpath or -rpath-link)

cd 

need to mount the volume: paddlepaddle_volume-x86_64-1.0.0




4. only CyberBridge bazel build:
  root@apollo5-apollo-ubuntu14-1:/apollo# bazel build //CyberBridge:libApolloCyber.so




5. 
protobuffer:

zy@zy:~/Desktop/proto$ protoc addressbook.proto --cpp_out=./


6. the pb.h and pb.cc files generated by bazel are localized in the path below: 

root@apollo5-apollo-ubuntu14-1:/apollo/bazel-out/local-dbg/genfiles/modules/localization/proto# 