cker ps

docker exec -it  bash

 git config --global credential.helper cachelal
 
 
 
 1. 使用docker镜像nginx:latest以后台模式启动一个容器,并将容器命名为mynginx
	docker run --name mynginx -d nginx:latest
 
 
2. 使用镜像nginx:latest以后台模式启动一个容器,并将容器的80端口映射到主机随机端口(-P: 随机端口映射，容器内部端口随机映射到主机的高端口)
	docker run -P -d nginx:latest
	
3. 使用镜像 nginx:latest，以后台模式启动一个容器,将容器的 80 端口映射到主机的 80 端口,主机的目录 /data 映射到容器的 /data。

docker run -p 80:80 -v /data:/data -d nginx:latest


4. 绑定容器的 8080 端口，并将其映射到本地主机 127.0.0.1 的 80 端口上。
	docker run -p 127.0.0.1:80:8080/tcp ubuntu bash
	
5. 使用镜像nginx:latest以交互模式启动一个容器,在容器内执行/bin/bash命令。

runoob@runoob:~$ docker run -it nginx:latest /bin/bash
root@b8573233d675:/# 


6. 启动已被停止的容器myrunoob

	docker start myrunoob
	停止运行中的容器myrunoob

	docker stop myrunoob
	重启容器myrunoob

	docker restart myrunoob
	

7. 	杀掉运行中的容器mynginx
	runoob@runoob:~$ docker kill -s KILL mynginx
	mynginx
	
	
8. 	强制删除容器db01、db02
	docker rm -f db01 db02
	移除容器nginx01对容器db01的连接，连接名db

	docker rm -l db 
	删除容器nginx01,并删除容器挂载的数据卷

	docker rm -v nginx01
		

9.	暂停数据库容器db01提供服务
	docker pause db01
	恢复数据库容器db01提供服务
	docker unpause db01
		
	
10. 使用docker镜像nginx:latest创建一个容器,并将容器命名为myrunoob
	runoob@runoob:~$ docker create  --name myrunoob  nginx:latest      
	09b93464c2f75b7b69f83d56a9cfc23ceb50a48a9db7652ee4c27e3e2cb1961f	
		

11. 在容器 mynginx 中以交互模式执行容器内 /root/runoob.sh 脚本:
	runoob@runoob:~$ docker exec -it mynginx /bin/sh /root/runoob.sh
	
	
12.	也可以通过 docker ps -a 命令查看已经在运行的容器，然后使用容器 ID 进入容器。

查看已经在运行的容器 ID：

# docker ps -a 
...
9df70f9a0714        openjdk             "/usercode/script.sh…" 
...
第一列的 9df70f9a0714 就是容器 ID。

通过 exec 命令对指定的容器执行 bash:

# docker exec -it 9df70f9a0714 /bin/bash
	


13.   从容器拷贝文件到宿主机: zy@zy:~$ docker cp 1c10ae5c477792224b18ff8b218a39e4475948324afdc6d4622afb83ad46c07e:/apollo/CyberBridge /home/zy/Desktop

      从宿主机拷贝文件到容器: docker cp /opt/test/file.txt mycontainer：/opt/testnew/



14. docker commit -a "runoob.com" -m "my apache" a404c6c174a2  mymysql:v1 

	docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]
	OPTIONS说明：
	-a :提交的镜像作者；
	-c :使用Dockerfile指令来创建镜像；
	-m :提交时的说明文字；
	-p :在commit时，将容器暂停。












	
	
	
	